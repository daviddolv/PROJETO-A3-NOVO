package sistema;

import entity.Aluno;
import java.util.ArrayList;
import java.util.List;

/**
 * üéì Classe Sistema
 * 
 * Respons√°vel pelo gerenciamento central dos alunos do sistema.
 * Implementa opera√ß√µes b√°sicas de adicionar, listar e deletar alunos.
 * Mant√©m uma lista interna de alunos e controle autom√°tico do ID.
 */
public class Sistema {

    // Lista interna que armazena os alunos cadastrados
    private static final List<Aluno> alunos = new ArrayList<>();

    // Controle do ID √∫nico para novos alunos, iniciado em 1
    private static int idAtual = 1;

    /**
     * Adiciona um novo aluno √† lista, atribuindo um ID autom√°tico.
     * 
     * @param aluno Objeto Aluno a ser adicionado.
     */
    public static void adicionarAluno(Aluno aluno) {
        aluno.setId(idAtual++);
        alunos.add(aluno);
    }

    /**
     * Retorna uma c√≥pia da lista de alunos cadastrados.
     * Isso evita exposi√ß√£o direta da lista interna.
     * 
     * @return Lista de alunos cadastrados.
     */
    public static List<Aluno> getAlunos() {
        return new ArrayList<>(alunos);
    }

    /**
     * Remove um aluno pelo seu ID.
     * 
     * @param id Identificador do aluno a ser removido.
     * @return true se o aluno foi removido, false caso contr√°rio.
     */
    public static boolean deletarAlunoPorId(int id) {
        return alunos.removeIf(aluno -> aluno.getId() == id);
    }

    /**
     * M√©todo placeholder para carregar dados do sistema.
     * Implementa√ß√£o futura necess√°ria.
     */
    public void carregarDados() {
        throw new UnsupportedOperationException("M√©todo 'carregarDados' n√£o implementado");
    }

    /**
     * M√©todo placeholder para exibir o menu principal do sistema.
     * Implementa√ß√£o futura necess√°ria.
     */
    public void exibirMenuPrincipal() {
        throw new UnsupportedOperationException("M√©todo 'exibirMenuPrincipal' n√£o implementado");
    }
}
